type AddPermissionResult = record { code : nat32; message : opt text };
type DeleteResult = record { code : nat32; message : opt text };
type HasPermissionResult = record {
  writable : bool;
  code : nat32;
  readable : bool;
  message : opt text;
  manageable : bool;
};
type ListFilesResult = record {
  code : nat32;
  data : opt vec text;
  message : opt text;
};
type LoadResult = record { code : nat32; data : opt blob; message : opt text };
type SaveResult = record { code : nat32; message : opt text };
service : () -> {
  add_permission : (principal, text, bool, bool, bool) -> (AddPermissionResult);
  createDirectory : (text) -> (AddPermissionResult);
  delete : (text) -> (DeleteResult);
  deleteDirectory : (text) -> (DeleteResult);
  hasPermission : (text) -> (HasPermissionResult);
  listFiles : (text) -> (ListFilesResult) query;
  load : (text) -> (LoadResult) query;
  remove_permission : (principal, text, bool, bool, bool) -> (DeleteResult);
  save : (text, text, blob, bool) -> (SaveResult);
  version : () -> (text) query;
}
